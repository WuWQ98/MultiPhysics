{"ast":null,"code":"import * as THREE from \"three\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport * as dat from \"dat.gui\";\n\nfunction initRenderer(canvas) {\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true,\n    canvas: canvas\n  });\n  renderer.setSize(parseFloat(window.getComputedStyle(canvas).width), parseFloat(window.getComputedStyle(canvas).height));\n  renderer.setPixelRatio(window.devicePixelRation);\n  renderer.setClearColor(0x000, 0.5);\n  return renderer;\n}\n\nfunction initCamera(renderer) {\n  let width = window.getComputedStyle(renderer.domElement).width;\n  let height = window.getComputedStyle(renderer.domElement).height;\n  const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\n  camera.position.set(25, 25, 25);\n  camera.lookAt(0, 0, 0);\n  return camera;\n}\n\nfunction initHelper(scene) {\n  const gridHelper = new THREE.GridHelper(200, 200);\n  scene.add(gridHelper);\n  const axes = new THREE.AxesHelper(100);\n  scene.add(axes);\n  return {\n    gridHelper: gridHelper,\n    axes: axes\n  };\n}\n\nfunction initLight(scene) {\n  const light = new THREE.DirectionalLight(0xffffff);\n  light.position.set(0, 20, 0);\n  scene.add(light);\n  return light;\n}\n\nfunction initControl(camera, renderer) {\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.dampingFactor = 0.25;\n  controls.enableZoom = true;\n  controls.autoRotate = false;\n  controls.minDistance = 1;\n  controls.maxDistance = 1000;\n  controls.enablePan = true;\n  return controls;\n}\n\nfunction initGuiControl(container) {\n  const gui = new dat.GUI({\n    autoPlace: false\n  });\n  container.appendChild(gui.domElement); // gui.domElement.style = `\n  //     position: relative;\n  //     top:0;\n  //     left:2%;\n  //   `;\n\n  let Axis = gui.addFolder(\"Axis\");\n  Axis.add({\n    X: \"Red\",\n    Y: \"Green\",\n    Z: \"Blue\"\n  }, \"X\");\n  Axis.add({\n    X: \"Red\",\n    Y: \"Green\",\n    Z: \"Blue\"\n  }, \"Y\");\n  Axis.add({\n    X: \"Red\",\n    Y: \"Green\",\n    Z: \"Blue\"\n  }, \"Z\");\n  Axis.open();\n  return gui;\n}\n\nexport { initRenderer, initCamera, initHelper, initLight, initControl, initGuiControl };","map":{"version":3,"names":["THREE","OrbitControls","dat","initRenderer","canvas","renderer","WebGLRenderer","antialias","setSize","parseFloat","window","getComputedStyle","width","height","setPixelRatio","devicePixelRation","setClearColor","initCamera","domElement","camera","PerspectiveCamera","position","set","lookAt","initHelper","scene","gridHelper","GridHelper","add","axes","AxesHelper","initLight","light","DirectionalLight","initControl","controls","dampingFactor","enableZoom","autoRotate","minDistance","maxDistance","enablePan","initGuiControl","container","gui","GUI","autoPlace","appendChild","Axis","addFolder","X","Y","Z","open"],"sources":["/Users/wuweiqiang/Documents/VSCode/Cable/react-app/src/component/SecondPage/renderer.jsx"],"sourcesContent":["import * as THREE from \"three\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls.js\";\nimport * as dat from \"dat.gui\";\n\nfunction initRenderer(canvas) {\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true,\n    canvas: canvas,\n  });\n  renderer.setSize(\n    parseFloat(window.getComputedStyle(canvas).width),\n    parseFloat(window.getComputedStyle(canvas).height)\n  );\n  renderer.setPixelRatio(window.devicePixelRation);\n  renderer.setClearColor(0x000, 0.5);\n  return renderer;\n}\n\nfunction initCamera(renderer) {\n  let width = window.getComputedStyle(renderer.domElement).width;\n  let height = window.getComputedStyle(renderer.domElement).height;\n  const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\n  camera.position.set(25, 25, 25);\n  camera.lookAt(0, 0, 0);\n  return camera;\n}\n\nfunction initHelper(scene) {\n  const gridHelper = new THREE.GridHelper(200, 200);\n  scene.add(gridHelper);\n  const axes = new THREE.AxesHelper(100);\n  scene.add(axes);\n  return { gridHelper: gridHelper, axes: axes };\n}\n\nfunction initLight(scene) {\n  const light = new THREE.DirectionalLight(0xffffff);\n  light.position.set(0, 20, 0);\n  scene.add(light);\n  return light;\n}\n\nfunction initControl(camera, renderer) {\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.dampingFactor = 0.25;\n  controls.enableZoom = true;\n  controls.autoRotate = false;\n  controls.minDistance = 1;\n  controls.maxDistance = 1000;\n  controls.enablePan = true;\n  return controls;\n}\n\nfunction initGuiControl(container) {\n  const gui = new dat.GUI({ autoPlace: false });\n  container.appendChild(gui.domElement);\n  // gui.domElement.style = `\n  //     position: relative;\n  //     top:0;\n  //     left:2%;\n  //   `;\n  let Axis = gui.addFolder(\"Axis\");\n  Axis.add(\n    {\n      X: \"Red\",\n      Y: \"Green\",\n      Z: \"Blue\",\n    },\n    \"X\"\n  );\n  Axis.add(\n    {\n      X: \"Red\",\n      Y: \"Green\",\n      Z: \"Blue\",\n    },\n    \"Y\"\n  );\n  Axis.add(\n    {\n      X: \"Red\",\n      Y: \"Green\",\n      Z: \"Blue\",\n    },\n    \"Z\"\n  );\n  Axis.open();\n  return gui;\n}\n\nexport {\n  initRenderer,\n  initCamera,\n  initHelper,\n  initLight,\n  initControl,\n  initGuiControl,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}